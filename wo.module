<?php
/**
 * @file
 * Code for the Wikiocracy feature.
 */

require_once('wo.features.inc');
require_once('wo.vote.inc');
require_once('wo.batch.inc');

/**
 * Implementation of hook_ctools_plugin_dierctory() to let the system know
 * we implement plugins.
 */
function wo_ctools_plugin_directory($module, $plugin) {
  return 'plugins/' . $plugin;
}

function wo_node_insert($node) {
  if ($node->type == 'wo_vote') wo_vote_updated_created($node);
}

function wo_node_update($node) {
  if ($node->type == 'wo_vote') wo_vote_updated_created($node);
}

function wo_form_alter(&$form, &$form_state, $form_id) {  
  wo_form_alter_diable_fields($form, $form_state, $form_id);
  
  // Proposal node create and edit form
  if ($form_id == 'wo_proposal_node_form') {
    // If no issue is assigned, assign it from the URL
    if (!$form['field_wo_proposal_issue']['und'][0]['target_id']['#default_value']) {
      
      // Trigger an error if we are missing the issue nid
      if (!isset($_GET['issue'])) {
        trigger_error('Bad Form State - missing issue nid',E_USER_ERROR);
        die();
      }
      
      // Load the issue and make sure it's valid
      $issue = node_load(intval($_GET['issue']));
      if ($issue->type != 'wo_issue') {
        trigger_error('Bad Form State - missing issue nid',E_USER_ERROR);
        die;
      }
      
      $form['field_wo_proposal_issue']['und'][0]['target_id']['#default_value'] = $issue->title.' ('.$issue->nid.')';
    }
  }
  
  // Vote node create and edit form
  if ($form_id == 'wo_vote_node_form') {
    // If no issue is assigned, assign it from the URL
    if (!$form['field_wo_vote_issue']['und'][0]['target_id']['#default_value']) {
      
      // Trigger an error if we are missing the issue nid
      if (!isset($_GET['issue'])) {
        trigger_error('Bad Form State - missing issue nid',E_USER_ERROR);
        die();
      }
      
      // Load the issue and make sure it's valid
      $issue = node_load(intval($_GET['issue']));
      if ($issue->type != 'wo_issue') {
        trigger_error('Bad Form State - missing issue nid',E_USER_ERROR);
        die;
      }
      
      $form['field_wo_vote_issue']['und'][0]['target_id']['#default_value'] = $issue->title.' ('.$issue->nid.')';
    }
  }
}

function wo_form_alter_diable_fields(&$form, &$form_state, $form_id) {
  $disable = array (
    'wo_proposal' => array('field_wo_proposal_essay_agt','field_wo_proposal_essay_for','field_wo_proposal_issue'),
    'wo_issue' => array('field_wo_issue_consensus','field_wo_issue_proposals'),
    #'wo_vote' =
    #'wo_essay'
  );
  
  foreach ($disable as $content_type => $fields) {
    if ($form_id == $content_type.'_node_form') {
      foreach ($fields as $field) {
        $form[$field]['#access'] = FALSE;
      }
    }
  }
}

function wo_vote_updated_created($vote) {
  // Recalculate the issue -- eventually this will be done on cron
  $issue = node_load($vote->field_wo_vote_issue['und'][0]['nid']);
  wo_batch_update_issue($issue);
}

